(self.webpackChunkwebpack_demo=self.webpackChunkwebpack_demo||[]).push([[669],{9669:(t,e,a)=>{"use strict";a.r(e),a.d(e,{default:()=>s});var i=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{attrs:{id:"app"}},[t._m(0),t._v(" "),a("div",{attrs:{id:"oparea"}},[a("el-button",{staticClass:"button1",attrs:{type:"success",disabled:t.button_finish},on:{click:function(e){return t.export_img()}}},[t._v(" Save ")]),t._v(" "),a("br"),t._v(" "),a("el-button",{staticClass:"button1",attrs:{type:"primary"},on:{click:function(e){return t.select_img()}}},[t._v("New templet")])],1)])};i._withStripped=!0;const n={name:"shop-cart",data:function(){return{button_finish:0,templet_info:{},email:localStorage.getItem("email"),token:localStorage.getItem("token"),tag:"Natural Vientiane",title:"Seamless design of hand painted rose",templet_id:"xuntu_1"}},mounted:function(){console.log("myCanvas","hello worlds"),$((function(){var t,e=document.getElementById("canvas");console.log("myCanvas",e);var a=e.getContext("2d"),i=new Image;i.setAttribute("crossOrigin","Anonymous"),i.onload=function(){a.drawImage(i,0,0)},i.src="https://chia1-1300721637.cos.ap-shanghai.myqcloud.com/img/sample/cat1.jpg",$("#wire").on("click",(function(i){if(!t)return alert("Please select one color to fill"),!1;i=i.originalEvent||i;var n=$(this).offset(),o=Math.floor(i.pageX-n.left),s=Math.floor(i.pageY-n.top),l=a.getImageData(o,s,1,1).data;if(0===l[0]&&0===l[1]&&0===l[2]&&0===l[3])return alert("Can't fill in this point"),!1;if(l[0]<50&&l[1]<50&&l[2]<50&&255===l[3])return alert("Can't fill in line"),!1;var c=hexToRgb(t).split(",");c.push(255),floodFillLinear(e,o,s,c,80)})),$("#colors").on("click","li:not(.checked)",(function(){$(this).addClass("checked").siblings(".checked").removeClass("checked"),t=$(this).html()}))}))},methods:{export_img:function(){var t=this;this.button_finish=1,console.log("export image");var e=document.querySelector("#canvas").toDataURL(),a=new FormData;a.append("email",this.email),a.append("pic",e),a.append("tag",this.tag),a.append("title",this.title),a.append("templet_id",this.templet_id),axios.post("http://rest.cata.show/user_operation/upload_pic",a).then((function(e){console.log(e.data),t.button_finish=0,t.$message({message:'Upload success! You could find your pic in "My work" tab',type:"success"})}))},select_img:function(){var t=this,e=document.querySelector("#canvas").getContext("2d"),a=new Image;a.setAttribute("crossOrigin","Anonymous"),a.onload=function(){e.drawImage(a,0,0)},axios.get("http://rest.cata.show/Img_templet/get_random_img").then((function(e){t.templet_info=e.data.result[0],a.src=t.templet_info.snap_bin,t.tag=t.templet_info.new_tag_en,t.title=t.templet_info.title_en,t.templet_id=t.templet_info.pic_id}))}}};var o=(0,a(1900).Z)(n,i,[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{attrs:{id:"container"}},[a("section",{staticClass:"page",attrs:{id:"balloon"}},[a("section",{staticClass:"page",attrs:{id:"drawBalloon"}},[a("div",{attrs:{id:"draw-wrap"}},[a("canvas",{attrs:{id:"canvas",width:"520",height:"520"}}),t._v(" "),a("div",{attrs:{id:"wire"}})]),t._v(" "),a("ul",{attrs:{id:"colors"}},[a("li",[t._v("0050a1")]),t._v(" "),a("li",[t._v("02a1e3")]),t._v(" "),a("li",[t._v("abdced")]),t._v(" "),a("li",[t._v("ef790b")]),t._v(" "),a("li",[t._v("f8bc28")]),t._v(" "),a("li",[t._v("96c730")]),t._v(" "),a("li",[t._v("d3e6ba")]),t._v(" "),a("li",[t._v("f79ab5")]),t._v(" "),a("li",[t._v("e1147f")]),t._v(" "),a("li",[t._v("ffff00")]),t._v(" "),a("li",[t._v("a1488e")]),t._v(" "),a("li",[t._v("ee0000")]),t._v(" "),a("li",[t._v("4d9b46")]),t._v(" "),a("li",[t._v("ffffff")])])])])])}],!1,null,"8a64c65a",null);o.options.__file="src/views/shopCart/index.vue";const s=o.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,