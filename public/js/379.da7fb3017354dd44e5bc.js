(self.webpackChunkwebpack_demo=self.webpackChunkwebpack_demo||[]).push([[379],{7269:(t,e,a)=>{"use strict";a.r(e),a.d(e,{default:()=>s});var r=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"form-shop"},[a("el-form",{ref:"form",attrs:{rules:t.rules,model:t.formData,"label-width":"80px"}},[a("el-form-item",{attrs:{label:"Title"}},[a("el-input",{model:{value:t.formData.title,callback:function(e){t.$set(t.formData,"title",e)},expression:"formData.title"}})],1),t._v(" "),a("el-form-item",{attrs:{label:"Price"}},[a("el-input-number",{attrs:{precision:2,min:.01,max:9999},model:{value:t.formData.price,callback:function(e){t.$set(t.formData,"price",e)},expression:"formData.price"}})],1),t._v(" "),a("el-form-item",{attrs:{label:"Tag"}},[a("el-input",{model:{value:t.formData.tag,callback:function(e){t.$set(t.formData,"tag",e)},expression:"formData.tag"}})],1),t._v(" "),a("el-form-item",{attrs:{label:"Brief"}},[a("el-input",{attrs:{type:"textarea"},model:{value:t.formData.brief,callback:function(e){t.$set(t.formData,"brief",e)},expression:"formData.brief"}})],1),t._v(" "),a("el-form-item",{attrs:{label:"Pic"}},[a("img",{staticStyle:{width:"200px",height:"200px"},attrs:{src:t.goods_info.img_url,alt:""}})]),t._v(" "),a("el-form-item",[a("el-button",{attrs:{type:"primary",disabled:"0"!=t.status},on:{click:t.onSubmit}},[t._v("Pubish")])],1)],1)],1)};r._withStripped=!0;const i={name:"sell",components:{ShopForm:a(5818).Z},props:{},data:function(){return{rules:{title:[{required:!0,message:"请输入商品标题",trigger:"blur"}],price:[{required:!0,message:"请输入商品价格",trigger:"blur"}],count:[{required:!0,message:"请输入商品数量",trigger:"blur"}],information:[{required:!0,message:"请输入商品详情",trigger:"blur"}],level:[{required:!0,message:"请选择商品成色",trigger:"change"}],sort:[{required:!0,message:"请选择商品分类",trigger:"change"}]},formData:{},create_id:"",goods_info:{},status:"0",email:localStorage.getItem("email"),token:localStorage.getItem("token")}},mounted:function(){console.log("get sell page"),this.create_id=this.$route.query.create_id,this.get_goods_info(this.create_id)},methods:{get_goods_info:function(t){var e=this;axios.get("http://rest.cata.show/user_operation/get_user_item_create_info?email="+this.email+"&create_id="+t).then((function(t){e.goods_info=t.data.result[0],e.formData.url=e.goods_info.img_url,e.formData.title=e.goods_info.title,e.formData.tag=e.goods_info.tag,e.formData.price=1,e.status=e.goods_info.is_stock}))},onSubmit:function(){var t=this;console.log(this.formData),axios.get("http://rest.cata.show/user_operation/stock_pic?email="+this.email+"&create_id="+this.create_id+"&title="+this.formData.title+"&brief="+this.formData.brief+"&price="+this.formData.price+"&tag="+this.formData.tag).then((function(e){console.log(e.data),axios.get("http://rest.cata.show/user_operation/publish_pic?email="+t.email+"&create_id="+t.create_id+"&title="+t.formData.title+"&brief="+t.formData.brief+"&price="+t.formData.price+"&tag="+t.formData.tag).then((function(e){console.log("market",e.data),t.$router.push("/my/shoping")}))}))}}};var o=(0,a(1900).Z)(i,r,[],!1,null,"71662a22",null);o.options.__file="src/views/sell/index.vue";const s=o.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,