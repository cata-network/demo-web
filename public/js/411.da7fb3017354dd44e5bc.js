(self.webpackChunkwebpack_demo=self.webpackChunkwebpack_demo||[]).push([[411,735],{8224:(s,e,t)=>{"use strict";t.d(e,{f7:()=>r,eY:()=>i});var a=t(4618),r=function(s){return(0,a.Z)({url:"/user/edit",method:"post",data:s})},i=function(s){return(0,a.Z)({url:"/user/find",method:"get",params:s})}},1735:(s,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>a});const a={methods:{formValid:function(){var s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=s.username,t=s.password;return!(!this.formatUsername(e)||!this.formatPassword(t))},formatUsername:function(s){return s?!!/^[a-zA-Z]{1}([a-zA-Z0-9]|[._]){3,10}$/.test(s)||(this.$message.warning("请输入以字母开头的4~10位用户名"),!1):(this.$message.warning("请输入用户名"),!1)},formatPassword:function(s){return s?!!/^[a-zA-Z0-9]{1}([a-zA-Z0-9]|[._]){5,18}$/.test(s)||(this.$message.warning("请输入6～18位密码"),!1):(this.$message.warning("请输入密码"),!1)}}}},3411:(s,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>n});var a=function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("div",{staticClass:"register-page"},[t("div",{staticClass:"content"},[t("div",{staticClass:"img"},[t("img",{attrs:{src:s.imgLogin,alt:"login"}})]),s._v(" "),t("div",{staticClass:"info"},[s._m(0),s._v(" "),t("div",{staticClass:"user"},[t("div",{staticClass:"user-warp"},[t("span",[s._v("Email")]),s._v(" "),t("input",{directives:[{name:"model",rawName:"v-model",value:s.form.username,expression:"form.username"}],attrs:{type:"text",placeholder:"Please input Email"},domProps:{value:s.form.username},on:{input:function(e){e.target.composing||s.$set(s.form,"username",e.target.value)}}})]),s._v(" "),t("div",{staticClass:"user-warp"},[t("span",[s._v("Password")]),s._v(" "),t("input",{directives:[{name:"model",rawName:"v-model",value:s.form.password,expression:"form.password"}],attrs:{placeholder:"Set your password",type:"password"},domProps:{value:s.form.password},on:{input:function(e){e.target.composing||s.$set(s.form,"password",e.target.value)}}})]),s._v(" "),t("div",{staticClass:"user-warp"},[t("span",[s._v("Confirm password")]),s._v(" "),t("input",{directives:[{name:"model",rawName:"v-model",value:s.passwords,expression:"passwords"}],attrs:{placeholder:"re input password",type:"password"},domProps:{value:s.passwords},on:{keypress:function(e){return!e.type.indexOf("key")&&s._k(e.keyCode,"enter",13,e.key,"Enter")?null:s.handleRegister.apply(null,arguments)},input:function(e){e.target.composing||(s.passwords=e.target.value)}}})]),s._v(" "),t("div",{staticClass:"user-login"},[t("div",{staticClass:"btn",on:{click:s.handleRegister}},[s._v("Register")])])]),s._v(" "),t("div",{staticClass:"rigister"},[s._v("\n        Have account，Goto"),t("el-link",{attrs:{type:"primary"},on:{click:s.handleLogin}},[s._v("Login")])],1)])])])};a._withStripped=!0,t(8224);const r={name:"register-page",mixins:[t(1735).default],data:function(){return{imgLogin:"https://daes-1251985304.cos.ap-shanghai.myqcloud.com/shop/home/register.png",form:{username:"",password:""},passwords:""}},methods:{handleRegister:function(){var s=this;this.passwords.trim()&&this.passwords===this.form.password?axios.get("http://rest.cata.show/user/reg_user?email="+this.form.username+"&password="+this.form.password).then((function(e){s.$message.success("注册成功"),s.handleLogin()})):this.$message.warning("两次密码不一致")},handleLogin:function(){window.location.replace("/#/login")}}};var i=(0,t(1900).Z)(r,a,[function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("h4",{staticClass:"title"},[t("span",{staticClass:"left"}),s._v(" "),t("div",{staticClass:"text"},[s._v("Register")]),s._v(" "),t("span",{staticClass:"right"})])}],!1,null,"16c88cc8",null);i.options.__file="src/views/system/register/index.vue";const n=i.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJwYWNrLWRlbW8vLi9zcmMvYXBpL3VzZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vd2VicGFjay1kZW1vLy4vc3JjL3ZpZXdzL3N5c3RlbS9taXhpbnMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vd2VicGFjay1kZW1vLy4vc3JjL3ZpZXdzL3N5c3RlbS9yZWdpc3Rlci9pbmRleC52dWU/MDI1ZiIsIndlYnBhY2s6Ly93ZWJwYWNrLWRlbW8vc3JjL3ZpZXdzL3N5c3RlbS9yZWdpc3Rlci9pbmRleC52dWUiLCJ3ZWJwYWNrOi8vd2VicGFjay1kZW1vLy4vc3JjL3ZpZXdzL3N5c3RlbS9yZWdpc3Rlci9pbmRleC52dWU/ZDRkZSIsIndlYnBhY2s6Ly93ZWJwYWNrLWRlbW8vLi9zcmMvdmlld3Mvc3lzdGVtL3JlZ2lzdGVyL2luZGV4LnZ1ZSJdLCJuYW1lcyI6WyJ1c2VyRWRpdCIsImRhdGEiLCJyZXF1ZXN0IiwidXJsIiwibWV0aG9kIiwidXNlckluZm8iLCJwYXJhbXMiLCJtZXRob2RzIiwiZm9ybVZhbGlkIiwiZm9ybSIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJ0aGlzIiwiZm9ybWF0VXNlcm5hbWUiLCJmb3JtYXRQYXNzd29yZCIsInRlc3QiLCIkbWVzc2FnZSIsIndhcm5pbmciLCJzdHIiLCJyZW5kZXIiLCJfdm0iLCJfaCIsIiRjcmVhdGVFbGVtZW50IiwiX2MiLCJfc2VsZiIsInN0YXRpY0NsYXNzIiwiYXR0cnMiLCJzcmMiLCJpbWdMb2dpbiIsImFsdCIsIl92IiwiX20iLCJkaXJlY3RpdmVzIiwibmFtZSIsInJhd05hbWUiLCJ2YWx1ZSIsImV4cHJlc3Npb24iLCJ0eXBlIiwicGxhY2Vob2xkZXIiLCJkb21Qcm9wcyIsIm9uIiwiaW5wdXQiLCIkZXZlbnQiLCJ0YXJnZXQiLCJjb21wb3NpbmciLCIkc2V0IiwicGFzc3dvcmRzIiwia2V5cHJlc3MiLCJpbmRleE9mIiwiX2siLCJrZXlDb2RlIiwia2V5IiwiaGFuZGxlUmVnaXN0ZXIiLCJhcHBseSIsImFyZ3VtZW50cyIsImNsaWNrIiwiaGFuZGxlTG9naW4iLCJfd2l0aFN0cmlwcGVkIiwibWl4aW5zIiwidHJpbSIsImF4aW9zIiwid2luZG93IiwibG9jYXRpb24iLCJyZXBsYWNlIiwiY29tcG9uZW50Iiwib3B0aW9ucyIsIl9fZmlsZSJdLCJtYXBwaW5ncyI6IndKQWtCYUEsRUFBVyxTQUFDQyxHQUN2QixPQUFPQyxPQUFRLENBQ2JDLElBQUssYUFDTEMsT0FBUSxPQUNSSCxVQUlTSSxFQUFXLFNBQUNDLEdBQ3ZCLE9BQU9KLE9BQVEsQ0FDYkMsSUFBSyxhQUNMQyxPQUFRLE1BQ1JFLGEsMERDOUJKLFNBQ0VDLFFBQVMsQ0FDUEMsVUFETyxXQUNjLElBQVhDLEVBQVcsdURBQUosR0FDUEMsRUFBdUJELEVBQXZCQyxTQUFVQyxFQUFhRixFQUFiRSxTQUNsQixTQUFLQyxLQUFLQyxlQUFlSCxLQUFjRSxLQUFLRSxlQUFlSCxLQU83REUsZUFWTyxTQVVRSCxHQUNiLE9BQUtBLElBSU8sd0NBQ0hLLEtBQUtMLEtBQ1pFLEtBQUtJLFNBQVNDLFFBQVEsc0JBQ2YsSUFOUEwsS0FBS0ksU0FBU0MsUUFBUSxXQUNmLElBVVhILGVBdkJPLFNBdUJRSSxHQUNiLE9BQUtBLElBSU8sMkNBQ0hILEtBQUtHLEtBQ1pOLEtBQUtJLFNBQVNDLFFBQVEsZUFDZixJQU5QTCxLQUFLSSxTQUFTQyxRQUFRLFVBQ2YsTywwREMzQmYsSUFBSUUsRUFBUyxXQUNYLElBQUlDLEVBQU1SLEtBQ05TLEVBQUtELEVBQUlFLGVBQ1RDLEVBQUtILEVBQUlJLE1BQU1ELElBQU1GLEVBQ3pCLE9BQU9FLEVBQUcsTUFBTyxDQUFFRSxZQUFhLGlCQUFtQixDQUNqREYsRUFBRyxNQUFPLENBQUVFLFlBQWEsV0FBYSxDQUNwQ0YsRUFBRyxNQUFPLENBQUVFLFlBQWEsT0FBUyxDQUNoQ0YsRUFBRyxNQUFPLENBQUVHLE1BQU8sQ0FBRUMsSUFBS1AsRUFBSVEsU0FBVUMsSUFBSyxhQUUvQ1QsRUFBSVUsR0FBRyxLQUNQUCxFQUFH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QyxLQUFLSCxLQUFLRSxTQU0zRGlELE1BQ04scUdBQ0Esa0JBRVEsRUFBUix5QkFFUSxFQUFSLGlCQVhRaEQsS0FBS0ksU0FBU0MsUUFBUSxZQWdCMUJ1QyxZQXBCSixXQXFCTUssT0FBT0MsU0FBU0MsUUFBUSxlLElFMUYxQkMsR0FBWSxFLFFBQUEsR0FDZCxFQUNBN0MsRUhrSG9CLENBQ3BCLFdBQ0UsSUFBSUMsRUFBTVIsS0FDTlMsRUFBS0QsRUFBSUUsZUFDVEMsRUFBS0gsRUFBSUksTUFBTUQsSUFBTUYsRUFDekIsT0FBT0UsRUFBRyxLQUFNLENBQUVFLFlBQWEsU0FBVyxDQUN4Q0YsRUFBRyxPQUFRLENBQUVFLFlBQWEsU0FDMUJMLEVBQUlVLEdBQUcsS0FDUFAsRUFBRyxNQUFPLENBQUVFLFlBQWEsUUFBVSxDQUFDTCxFQUFJVSxHQUFHLGNBQzNDVixFQUFJVSxHQUFHLEtBQ1BQLEVBQUcsT0FBUSxDQUFFRSxZQUFhLGVHMUg5QixFQUNBLEtBQ0EsV0FDQSxNQXVCRnVDLEVBQVVDLFFBQVFDLE9BQVMsc0NBQzNCLFFBQWVGLEUiLCJmaWxlIjoianMvNDExLmRhN2ZiMzAxNzM1NGRkNDRlNWJjLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJlcXVlc3QgZnJvbSAnQC9hcGknO1xuXG5leHBvcnQgY29uc3QgbG9naW4gPSAoZGF0YSkgPT4ge1xuICByZXR1cm4gcmVxdWVzdCh7XG4gICAgdXJsOiAnL2xvZ2luJyxcbiAgICBtZXRob2Q6ICdwb3N0JyxcbiAgICBkYXRhLFxuICB9KVxufVxuXG5leHBvcnQgY29uc3QgcmVnaXN0ZXIgPSAoZGF0YSkgPT4ge1xuICByZXR1cm4gcmVxdWVzdCh7XG4gICAgdXJsOiAnL3JlZ2lzdGVyJyxcbiAgICBtZXRob2Q6ICdwb3N0JyxcbiAgICBkYXRhXG4gIH0pXG59XG5cbmV4cG9ydCBjb25zdCB1c2VyRWRpdCA9IChkYXRhKSA9PiB7XG4gIHJldHVybiByZXF1ZXN0KHtcbiAgICB1cmw6ICcvdXNlci9lZGl0JyxcbiAgICBtZXRob2Q6ICdwb3N0JyxcbiAgICBkYXRhXG4gIH0pXG59XG5cbmV4cG9ydCBjb25zdCB1c2VySW5mbyA9IChwYXJhbXMpID0+IHtcbiAgcmV0dXJuIHJlcXVlc3Qoe1xuICAgIHVybDogJy91c2VyL2ZpbmQnLFxuICAgIG1ldGhvZDogJ2dldCcsXG4gICAgcGFyYW1zLFxuICB9KVxufSIsImV4cG9ydCBkZWZhdWx0IHtcbiAgbWV0aG9kczoge1xuICAgIGZvcm1WYWxpZChmb3JtID0ge30pIHtcbiAgICAgIGNvbnN0IHsgdXNlcm5hbWUsIHBhc3N3b3JkIH0gPSBmb3JtO1xuICAgICAgaWYgKCF0aGlzLmZvcm1hdFVzZXJuYW1lKHVzZXJuYW1lKSB8fCAhdGhpcy5mb3JtYXRQYXNzd29yZChwYXNzd29yZCkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICB9LFxuICAgIGZvcm1hdFVzZXJuYW1lKHVzZXJuYW1lKSB7XG4gICAgICBpZiAoIXVzZXJuYW1lKSB7XG4gICAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZyhcIuivt+i+k+WFpeeUqOaIt+WQjVwiKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgY29uc3QgcmVnID0gL15bYS16QS1aXXsxfShbYS16QS1aMC05XXxbLl9dKXszLDEwfSQvO1xuICAgICAgaWYgKCFyZWcudGVzdCh1c2VybmFtZSkpIHtcbiAgICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKFwi6K+36L6T5YWl5Lul5a2X5q+N5byA5aS055qENH4xMOS9jeeUqOaIt+WQjVwiKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSxcblxuICAgIGZvcm1hdFBhc3N3b3JkKHN0cikge1xuICAgICAgaWYgKCFzdHIpIHtcbiAgICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKFwi6K+36L6T5YWl5a+G56CBXCIpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICBjb25zdCByZWcgPSAvXlthLXpBLVowLTldezF9KFthLXpBLVowLTldfFsuX10pezUsMTh9JC87XG4gICAgICBpZiAoIXJlZy50ZXN0KHN0cikpIHtcbiAgICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKFwi6K+36L6T5YWlNu+9njE45L2N5a+G56CBXCIpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9LFxuICB9LFxufSIsInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJyZWdpc3Rlci1wYWdlXCIgfSwgW1xuICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiY29udGVudFwiIH0sIFtcbiAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiaW1nXCIgfSwgW1xuICAgICAgICBfYyhcImltZ1wiLCB7IGF0dHJzOiB7IHNyYzogX3ZtLmltZ0xvZ2luLCBhbHQ6IFwibG9naW5cIiB9IH0pXG4gICAgICBdKSxcbiAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImluZm9cIiB9LCBbXG4gICAgICAgIF92bS5fbSgwKSxcbiAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJ1c2VyXCIgfSwgW1xuICAgICAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwidXNlci13YXJwXCIgfSwgW1xuICAgICAgICAgICAgX2MoXCJzcGFuXCIsIFtfdm0uX3YoXCJFbWFpbFwiKV0pLFxuICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgIF9jKFwiaW5wdXRcIiwge1xuICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgbmFtZTogXCJtb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgcmF3TmFtZTogXCJ2LW1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm0udXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcImZvcm0udXNlcm5hbWVcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogXCJ0ZXh0XCIsIHBsYWNlaG9sZGVyOiBcIlBsZWFzZSBpbnB1dCBFbWFpbFwiIH0sXG4gICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0uZm9ybS51c2VybmFtZSB9LFxuICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIF92bS4kc2V0KF92bS5mb3JtLCBcInVzZXJuYW1lXCIsICRldmVudC50YXJnZXQudmFsdWUpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgIF0pLFxuICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJ1c2VyLXdhcnBcIiB9LCBbXG4gICAgICAgICAgICBfYyhcInNwYW5cIiwgW192bS5fdihcIlBhc3N3b3JkXCIpXSksXG4gICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgX2MoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBuYW1lOiBcIm1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICByYXdOYW1lOiBcInYtbW9kZWxcIixcbiAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uZm9ybS5wYXNzd29yZCxcbiAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwiZm9ybS5wYXNzd29yZFwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICBhdHRyczogeyBwbGFjZWhvbGRlcjogXCJTZXQgeW91ciBwYXNzd29yZFwiLCB0eXBlOiBcInBhc3N3b3JkXCIgfSxcbiAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5mb3JtLnBhc3N3b3JkIH0sXG4gICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLmZvcm0sIFwicGFzc3dvcmRcIiwgJGV2ZW50LnRhcmdldC52YWx1ZSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgXSksXG4gICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcInVzZXItd2FycFwiIH0sIFtcbiAgICAgICAgICAgIF9jKFwic3BhblwiLCBbX3ZtLl92KFwiQ29uZmlybSBwYXNzd29yZFwiKV0pLFxuICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgIF9jKFwiaW5wdXRcIiwge1xuICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgbmFtZTogXCJtb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgcmF3TmFtZTogXCJ2LW1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnBhc3N3b3JkcyxcbiAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwicGFzc3dvcmRzXCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgIGF0dHJzOiB7IHBsYWNlaG9sZGVyOiBcInJlIGlucHV0IHBhc3N3b3JkXCIsIHR5cGU6IFwicGFzc3dvcmRcIiB9LFxuICAgICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLnBhc3N3b3JkcyB9LFxuICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgIGtleXByZXNzOiBmdW5jdGlvbigkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgISRldmVudC50eXBlLmluZGV4T2YoXCJrZXlcIikgJiZcbiAgICAgICAgICAgICAgICAgICAgX3ZtLl9rKCRldmVudC5rZXlDb2RlLCBcImVudGVyXCIsIDEzLCAkZXZlbnQua2V5LCBcIkVudGVyXCIpXG4gICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uaGFuZGxlUmVnaXN0ZXIuYXBwbHkobnVsbCwgYXJndW1lbnRzKVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgX3ZtLnBhc3N3b3JkcyA9ICRldmVudC50YXJnZXQudmFsdWVcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgXSksXG4gICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcInVzZXItbG9naW5cIiB9LCBbXG4gICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJidG5cIiwgb246IHsgY2xpY2s6IF92bS5oYW5kbGVSZWdpc3RlciB9IH0sXG4gICAgICAgICAgICAgIFtfdm0uX3YoXCJSZWdpc3RlclwiKV1cbiAgICAgICAgICAgIClcbiAgICAgICAgICBdKVxuICAgICAgICBdKSxcbiAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgX2MoXG4gICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcInJpZ2lzdGVyXCIgfSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBfdm0uX3YoXCJcXG4gICAgICAgIEhhdmUgYWNjb3VudO+8jEdvdG9cIiksXG4gICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgXCJlbC1saW5rXCIsXG4gICAgICAgICAgICAgIHsgYXR0cnM6IHsgdHlwZTogXCJwcmltYXJ5XCIgfSwgb246IHsgY2xpY2s6IF92bS5oYW5kbGVMb2dpbiB9IH0sXG4gICAgICAgICAgICAgIFtfdm0uX3YoXCJMb2dpblwiKV1cbiAgICAgICAgICAgIClcbiAgICAgICAgICBdLFxuICAgICAgICAgIDFcbiAgICAgICAgKVxuICAgICAgXSlcbiAgICBdKVxuICBdKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtcbiAgZnVuY3Rpb24oKSB7XG4gICAgdmFyIF92bSA9IHRoaXNcbiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgICByZXR1cm4gX2MoXCJoNFwiLCB7IHN0YXRpY0NsYXNzOiBcInRpdGxlXCIgfSwgW1xuICAgICAgX2MoXCJzcGFuXCIsIHsgc3RhdGljQ2xhc3M6IFwibGVmdFwiIH0pLFxuICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwidGV4dFwiIH0sIFtfdm0uX3YoXCJSZWdpc3RlclwiKV0pLFxuICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgIF9jKFwic3BhblwiLCB7IHN0YXRpY0NsYXNzOiBcInJpZ2h0XCIgfSlcbiAgICBdKVxuICB9XG5dXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsIjx0ZW1wbGF0ZT5cbiAgPGRpdiBjbGFzcz1cInJlZ2lzdGVyLXBhZ2VcIj5cbiAgICA8ZGl2IGNsYXNzPVwiY29udGVudFwiPlxuICAgICAgPGRpdiBjbGFzcz1cImltZ1wiPlxuICAgICAgICA8aW1nIDpzcmM9XCJpbWdMb2dpblwiIGFsdD1cImxvZ2luXCIgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cImluZm9cIj5cbiAgICAgICAgPGg0IGNsYXNzPVwidGl0bGVcIj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz1cImxlZnRcIj48L3NwYW4+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInRleHRcIj5SZWdpc3RlcjwvZGl2PlxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwicmlnaHRcIj48L3NwYW4+XG4gICAgICAgIDwvaDQ+XG5cbiAgICAgICAgPCEtLSDnmbvpmYYgLS0+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJ1c2VyXCI+XG4gICAgICAgICAgPCEtLSDnlKjmiLflkI0gLS0+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInVzZXItd2FycFwiPlxuICAgICAgICAgICAgPHNwYW4+RW1haWw8L3NwYW4+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICB2LW1vZGVsPVwiZm9ybS51c2VybmFtZVwiXG4gICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiUGxlYXNlIGlucHV0IEVtYWlsXCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPCEtLSDlr4bnoIEgLS0+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInVzZXItd2FycFwiPlxuICAgICAgICAgICAgPHNwYW4+UGFzc3dvcmQ8L3NwYW4+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgdi1tb2RlbD1cImZvcm0ucGFzc3dvcmRcIlxuICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIlNldCB5b3VyIHBhc3N3b3JkXCJcbiAgICAgICAgICAgICAgdHlwZT1cInBhc3N3b3JkXCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInVzZXItd2FycFwiPlxuICAgICAgICAgICAgPHNwYW4+Q29uZmlybSBwYXNzd29yZDwvc3Bhbj5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICBAa2V5cHJlc3MuZW50ZXI9XCJoYW5kbGVSZWdpc3RlclwiXG4gICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwicmUgaW5wdXQgcGFzc3dvcmRcIlxuICAgICAgICAgICAgICB0eXBlPVwicGFzc3dvcmRcIlxuICAgICAgICAgICAgICB2LW1vZGVsPVwicGFzc3dvcmRzXCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwidXNlci1sb2dpblwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJ0blwiIEBjbGljaz1cImhhbmRsZVJlZ2lzdGVyXCI+UmVnaXN0ZXI8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPCEtLSDot7Povazms6jlhowgLS0+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJyaWdpc3RlclwiPlxuICAgICAgICAgIEhhdmUgYWNjb3VudO+8jEdvdG88ZWwtbGluayB0eXBlPVwicHJpbWFyeVwiIEBjbGljaz1cImhhbmRsZUxvZ2luXCJcbiAgICAgICAgICAgID5Mb2dpbjwvZWwtbGlua1xuICAgICAgICAgID5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IHsgcmVnaXN0ZXIsIHVzZXJFZGl0IH0gZnJvbSBcIkAvYXBpL3VzZXJcIlxuaW1wb3J0IGZvcm1hdCBmcm9tIFwiLi4vbWl4aW5zXCJcblxuZXhwb3J0IGRlZmF1bHQge1xuICBuYW1lOiBcInJlZ2lzdGVyLXBhZ2VcIixcbiAgbWl4aW5zOiBbZm9ybWF0XSxcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaW1nTG9naW46XG4gICAgICAgIFwiaHR0cHM6Ly9kYWVzLTEyNTE5ODUzMDQuY29zLmFwLXNoYW5naGFpLm15cWNsb3VkLmNvbS9zaG9wL2hvbWUvcmVnaXN0ZXIucG5nXCIsXG4gICAgICBmb3JtOiB7XG4gICAgICAgIHVzZXJuYW1lOiBcIlwiLFxuICAgICAgICBwYXNzd29yZDogXCJcIixcbiAgICAgIH0sXG4gICAgICBwYXNzd29yZHM6IFwiXCIsXG4gICAgfVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgaGFuZGxlUmVnaXN0ZXIoKSB7XG4gICAgICAvLyBpZiAoIXRoaXMuZm9ybVZhbGlkKHRoaXMuZm9ybSkpIHJldHVyblxuICAgICAgaWYgKCF0aGlzLnBhc3N3b3Jkcy50cmltKCkgfHwgdGhpcy5wYXNzd29yZHMgIT09IHRoaXMuZm9ybS5wYXNzd29yZCkge1xuICAgICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoXCLkuKTmrKHlr4bnoIHkuI3kuIDoh7RcIilcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG5cbiAgICAgIC8v5rOo5YaMXG4gICAgICBheGlvc1xuICAgICAgICAgIC5nZXQoJ2h0dHA6Ly9yZXN0LmNhdGEuc2hvdy91c2VyL3JlZ191c2VyP2VtYWlsPScrIHRoaXMuZm9ybS51c2VybmFtZSArJyZwYXNzd29yZD0nICsgdGhpcy5mb3JtLnBhc3N3b3JkKVxuICAgICAgICAgIC50aGVuKChyZXMpPT57XG4gICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2cocmVzLmRhdGEpXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcyhcIuazqOWGjOaIkOWKn1wiKVxuICAgICAgICAgICAgICAgICAgICAvLyDot7PovazliLDnmbvpmYbnlYzpnaJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVMb2dpbigpXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgKVxuXG4gICAgfSxcbiAgICBoYW5kbGVMb2dpbigpIHtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKFwiLyMvbG9naW5cIilcbiAgICB9LFxuICB9LFxufVxuPC9zY3JpcHQ+XG48c3R5bGUgbGFuZz1cImxlc3NcIiBzY29wZWQ+XG5AaW1wb3J0IFwiLi9pbmRleFwiO1xuPC9zdHlsZT5cbiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xNmM4OGNjOCZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuaW1wb3J0IHN0eWxlMCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZpZD0xNmM4OGNjOCZsYW5nPWxlc3Mmc2NvcGVkPXRydWUmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjE2Yzg4Y2M4XCIsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHZhciBhcGkgPSByZXF1aXJlKFwiL1VzZXJzL21hYy9EZXNrdG9wL3Byb2plY3QvYXBwY29pbi9uZnQvc3JjL3NlY29uZGhhbmQtc2hvcC9ub2RlX21vZHVsZXMvdnVlLWhvdC1yZWxvYWQtYXBpL2Rpc3QvaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCcxNmM4OGNjOCcpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCcxNmM4OGNjOCcsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCcxNmM4OGNjOCcsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTE2Yzg4Y2M4JnNjb3BlZD10cnVlJlwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhcGkucmVyZW5kZXIoJzE2Yzg4Y2M4Jywge1xuICAgICAgICByZW5kZXI6IHJlbmRlcixcbiAgICAgICAgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnNcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJzcmMvdmlld3Mvc3lzdGVtL3JlZ2lzdGVyL2luZGV4LnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=