(self.webpackChunkwebpack_demo=self.webpackChunkwebpack_demo||[]).push([[695,735],{8224:(e,t,s)=>{"use strict";s.d(t,{f7:()=>n,eY:()=>r});var a=s(4618),n=function(e){return(0,a.Z)({url:"/user/edit",method:"post",data:e})},r=function(e){return(0,a.Z)({url:"/user/find",method:"get",params:e})}},1735:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>a});const a={methods:{formValid:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.username,s=e.password;return!(!this.formatUsername(t)||!this.formatPassword(s))},formatUsername:function(e){return e?!!/^[a-zA-Z]{1}([a-zA-Z0-9]|[._]){3,10}$/.test(e)||(this.$message.warning("请输入以字母开头的4~10位用户名"),!1):(this.$message.warning("请输入用户名"),!1)},formatPassword:function(e){return e?!!/^[a-zA-Z0-9]{1}([a-zA-Z0-9]|[._]){5,18}$/.test(e)||(this.$message.warning("请输入6～18位密码"),!1):(this.$message.warning("请输入密码"),!1)}}}},7695:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>o});var a=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"login-page"},[s("div",{staticClass:"content"},[e._m(0),e._v(" "),s("div",{staticClass:"info"},[e._m(1),e._v(" "),s("div",{staticClass:"user"},[s("div",{staticClass:"user-warp"},[s("span",[e._v("Email")]),e._v(" "),s("input",{directives:[{name:"model",rawName:"v-model",value:e.form.username,expression:"form.username"}],attrs:{type:"text",placeholder:"Please input email"},domProps:{value:e.form.username},on:{input:function(t){t.target.composing||e.$set(e.form,"username",t.target.value)}}})]),e._v(" "),s("div",{staticClass:"user-warp"},[s("span",[e._v("Password")]),e._v(" "),s("input",{directives:[{name:"model",rawName:"v-model",value:e.form.password,expression:"form.password"}],attrs:{placeholder:"Please input password",type:"password"},domProps:{value:e.form.password},on:{keypress:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.onLogin.apply(null,arguments)},input:function(t){t.target.composing||e.$set(e.form,"password",t.target.value)}}})]),e._v(" "),s("div",{staticClass:"user-login"},[s("div",{staticClass:"btn",on:{click:function(t){return t.stopPropagation(),e.onLogin.apply(null,arguments)}}},[e._v("Login")])])]),e._v(" "),s("div",{staticClass:"rigister"},[e._v("\n        No account，Goto "),s("el-link",{attrs:{type:"primary"},on:{click:e.handleRegister}},[e._v("Register")])],1)])])])};a._withStripped=!0,s(8224),s(7777);const n={name:"login-page",mixins:[s(1735).default],data:function(){return{form:{username:"",password:""}}},methods:{handleRegister:function(){window.location.replace("/#/register")},onLogin:function(){var e=this;axios.get("http://rest.cata.show/user/check_user_login_input?email="+this.form.username+"&password="+this.form.password).then((function(t){console.log(t.data),console.log(t.data.token),e.$message.success("登陆成功"),localStorage.setItem("token",t.data.token),localStorage.setItem("email",e.form.username),e.$router.replace("/")}))}}};var r=(0,s(1900).Z)(n,a,[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"img"},[t("img",{attrs:{src:"https://daes-1251985304.cos.ap-shanghai.myqcloud.com/shop/home/login.png",alt:"login"}})])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("h4",{staticClass:"title"},[s("span",{staticClass:"left"}),e._v(" "),s("div",{staticClass:"text"},[e._v("Welcome Login")]),e._v(" "),s("span",{staticClass:"right"})])}],!1,null,"1836e866",null);r.options.__file="src/views/system/login/index.vue";const o=r.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,